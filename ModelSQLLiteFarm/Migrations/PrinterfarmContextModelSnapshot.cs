// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelSQLLiteFarm;

#nullable disable

namespace ModelSQLLiteFarm.Migrations
{
    [DbContext(typeof(PrinterfarmContext))]
    partial class PrinterfarmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("ModelSQLLiteFarm.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<double?>("MaterialPrice")
                        .HasColumnType("REAL");

                    b.HasKey("MaterialID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<DateTime?>("DateDue")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DateIn")
                        .HasColumnType("DateTime");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<double>("OrderPrice")
                        .HasColumnType("REAL");

                    b.Property<double?>("PrintJobsCost")
                        .HasColumnType("REAL");

                    b.Property<int?>("PrintJobsCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.PrintJob", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Costs")
                        .HasColumnType("REAL");

                    b.Property<string>("GcodeAdress")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<int?>("LayerHeight")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Material")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<double?>("NozzleDiam_mm")
                        .HasColumnType("REAL");

                    b.Property<int?>("OrderID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PrintTime")
                        .HasColumnType("REAL");

                    b.Property<int>("PrinterType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VolX")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VolY")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VolZ")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("WeightMaterial")
                        .HasColumnType("REAL");

                    b.HasKey("JobID");

                    b.HasIndex("OrderID");

                    b.ToTable("PrintJobs");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.Printer", b =>
                {
                    b.Property<int>("PrinterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MRTimeEst")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("PrinterPurchDate")
                        .HasColumnType("datetime");

                    b.Property<double>("PrinterPurchPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("PrinterType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<double?>("ServiceTimeEst")
                        .HasColumnType("REAL");

                    b.HasKey("PrinterID");

                    b.ToTable("Printers");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.PrintersMaterial", b =>
                {
                    b.Property<int?>("PMMaterialsFK")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PMPrintersFK")
                        .HasColumnType("INTEGER");

                    b.HasIndex("PMMaterialsFK");

                    b.HasIndex("PMPrintersFK");

                    b.ToTable("PrintersMaterials");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.PrintersService", b =>
                {
                    b.Property<int>("PSPrintersFK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PSServicesFK")
                        .HasColumnType("INTEGER");

                    b.HasIndex("PSPrintersFK");

                    b.HasIndex("PSServicesFK");

                    b.ToTable("PrintersServices");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.Schedule", b =>
                {
                    b.Property<int>("JobScheduleID")
                        //.ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MR_Time")
                        .HasColumnType("REAL");

                    b.Property<int>("PrinterID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("RO_Time")
                        .HasColumnType("REAL");

                    b.Property<int?>("ScheduleWeek")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("DateTime");

                    b.HasKey("JobScheduleID");

                    b.HasIndex("JobID");

                    b.HasIndex("PrinterID");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.ServiceLogEvent", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EventCategory")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<string>("EventCost_euro")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EventLength_hrs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.HasKey("EventID");

                    b.ToTable("ServiceLogEvents");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.PrintJob", b =>
                {
                    b.HasOne("ModelSQLLiteFarm.Order", "Order")
                        .WithMany("PrintJobs")
                        .HasForeignKey("OrderID")
                        .HasConstraintName("FK_PrintJobs_Orders");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.PrintersMaterial", b =>
                {
                    b.HasOne("ModelSQLLiteFarm.Material", "PMMaterialsFKNavigation")
                        .WithMany()
                        .HasForeignKey("PMMaterialsFK")
                        .HasConstraintName("FK_PrintersMaterials_Materials");

                    b.HasOne("ModelSQLLiteFarm.Printer", "PMPrintersFKNavigation")
                        .WithMany()
                        .HasForeignKey("PMPrintersFK")
                        .HasConstraintName("FK_PrintersMaterials_Printers");

                    b.Navigation("PMMaterialsFKNavigation");

                    b.Navigation("PMPrintersFKNavigation");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.PrintersService", b =>
                {
                    b.HasOne("ModelSQLLiteFarm.Printer", "PSPrintersFKNavigation")
                        .WithMany()
                        .HasForeignKey("PSPrintersFK")
                        .IsRequired()
                        .HasConstraintName("FK_PrintersServices_Printers1");

                    b.HasOne("ModelSQLLiteFarm.ServiceLogEvent", "PSServicesFKNavigation")
                        .WithMany()
                        .HasForeignKey("PSServicesFK")
                        .IsRequired()
                        .HasConstraintName("FK_PrintersServices_ServiceLogEvents");

                    b.Navigation("PSPrintersFKNavigation");

                    b.Navigation("PSServicesFKNavigation");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.Schedule", b =>
                {
                    b.HasOne("ModelSQLLiteFarm.PrintJob", "PrintJob")
                        .WithOne("PrintSchedule")
                        .HasForeignKey("JobID")
                        .IsRequired()
                        .HasConstraintName("FK_Schedule_PrintJobs");

                    b.HasOne("ModelSQLLiteFarm.Printer", "Printer")
                        .WithMany("Schedules")
                        .HasForeignKey("PrinterID")
                        .IsRequired()
                        .HasConstraintName("FK_Schedule_Printers");

                    b.Navigation("PrintJob");

                    b.Navigation("Printer");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.Order", b =>
                {
                    b.Navigation("PrintJobs");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.PrintJob", b =>
                {
                    b.Navigation("PrintSchedule");
                });

            modelBuilder.Entity("ModelSQLLiteFarm.Printer", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
